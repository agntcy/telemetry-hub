# Copyright AGNTCY Contributors (https://github.com/agntcy)
# SPDX-License-Identifier: Apache-2.0

services:
  clickhouse-server:
    image: clickhouse/clickhouse-server
    container_name: clickhouse-server
    ports:
      - "9000:9000"
      - "8123:8123"
    expose:
      - "9000"
      - "8123"
    environment:
      CLICKHOUSE_USER: admin
      CLICKHOUSE_PASSWORD: admin
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    networks:
      - app_network
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8123/ping" ]
      interval: 5s
      timeout: 3s
      retries: 5
      start_period: 10s

  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: otel-collector
    restart: unless-stopped
    ports:
      - "4317:4317"
      - "4318:4318"
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    command: [ "--config", "/etc/otel-collector-config.yaml" ]
    networks:
      - app_network
    depends_on:
      clickhouse-server:
        condition: service_healthy
  api-layer:
    build:
      context: ../api-layer
      dockerfile: Dockerfile
      platforms:
        - linux/amd64
        - linux/arm64
    ports:
      - "8080:8080"
    environment:
      - CLICKHOUSE_URL=clickhouse-server
      - CLICKHOUSE_PORT=9000
      - CLICKHOUSE_USER=admin
      - CLICKHOUSE_PASS=admin
      - CLICKHOUSE_DB=default
      - SERVER_PORT=8080
      - PORT=8080
    depends_on:
      clickhouse-server:
        condition: service_healthy
      otel-collector:
        condition: service_started
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/keepAlive" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - app_network

  metrics-computation-engine:
    build:
      context: ../metrics_computation_engine
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - ../metrics_computation_engine/.env.example
    depends_on:
      api-layer:
        condition: service_healthy
    networks:
      - app_network

networks:
  app_network:
    driver: bridge
