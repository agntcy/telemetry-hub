"""CLI entry point for launching the mock LiteLLM proxy server."""

from __future__ import annotations

import uvicorn
import click

from metrics_computation_engine.mock_llm_proxy.config import MockLLMSettings, load_settings
from metrics_computation_engine.mock_llm_proxy.server import create_app


@click.command()
@click.option("--host", default="0.0.0.0", show_default=True)
@click.option("--port", default=8010, show_default=True, type=int)
@click.option(
    "--mock-metric-score",
    default=0.75,
    show_default=True,
    type=float,
    help="Score to return in JSON responses.",
)
@click.option(
    "--mock-reasoning",
    default="Mock evaluation generated by the LiteLLM proxy.",
    show_default=True,
    help="Reasoning string to include in responses.",
)
def main(
    host: str,
    port: int,
    mock_metric_score: float,
    mock_reasoning: str,
) -> None:
    """Start the mock LiteLLM proxy server."""

    overrides = {
        "host": host,
        "port": port,
        "mock_metric_score": mock_metric_score,
        "mock_reasoning": mock_reasoning,
    }

    settings: MockLLMSettings = load_settings(overrides)
    app = create_app(settings)

    uvicorn.run(app, host=settings.host, port=settings.port, log_level="info")


if __name__ == "__main__":
    main()


